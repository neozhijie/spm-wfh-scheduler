name: Main CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-test-python-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install flake8 bandit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install groq requests

      - name: Run Lint and Tests
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          python -m unittest discover tests
        
      - name: Notify on failure
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        run: |
          MESSAGE=$(cat <<EOF
          ⚠️ *Backend Integration Failed* ⚠️
          *Author:* ${AUTHOR_NAME}
          *Commit:* ${{ github.sha }}
          *Branch:* ${{ github.ref }}
          EOF
          )
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode text="$MESSAGE"

  build-test-vite-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Security Audit
        run: |
          cd frontend
          npm audit

      - name: Build Vite App
        run: |
          cd frontend
          npm run build

      - name: Notify on failure
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        run: |
          MESSAGE=$(cat <<EOF
          ⚠️ *Frontend Integration Failed* ⚠️
          *Author:* ${AUTHOR_NAME}
          *Commit:* ${{ github.sha }}
          *Branch:* ${{ github.ref }}
          EOF
          )
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode text="$MESSAGE"

  deploy-python-app:
    needs: [build-test-python-app, build-test-vite-app]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Render
        env:
          RENDER_WEBHOOK_URL: ${{ secrets.RENDER_WEBHOOK_URL }}
        run: |
          curl -X POST $RENDER_WEBHOOK_URL

      - name: Notify on failure
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        run: |
          MESSAGE=$(cat <<EOF
          ⚠️ *Render Deploy Failed* ⚠️
          *Author:* ${AUTHOR_NAME}
          *Commit:* ${{ github.sha }}
          *Branch:* ${{ github.ref }}
          EOF
          )
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode text="$MESSAGE"

  deploy-vite-app:
    needs: [build-test-python-app, build-test-vite-app]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel
        env:
          VERCEL_WEBHOOK_URL: ${{ secrets.VERCEL_WEBHOOK_URL }}
        run: |
          curl -X POST $VERCEL_WEBHOOK_URL

      - name: Notify on failure
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        run: |
          MESSAGE=$(cat <<EOF
          ⚠️ *Vercel Deploy Failed* ⚠️
          *Author:* ${AUTHOR_NAME}
          *Commit:* ${{ github.sha }}
          *Branch:* ${{ github.ref }}
          EOF
          )
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode text="$MESSAGE"
